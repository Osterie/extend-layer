; TODO: make sure that the same hotkey is not used for multiple functions.
; this can be made exceptions for if the same hotkey is used for different keyboard layers.
; It would be possible to have classes as arguments....

; TODO the user will be able to manipulate the .ini file, in case they mess up and ruin everything, at startup should also check if the ini file exists, and create it if not, check if there is a backup and run that first, then create the defualt ini file.
; they should be able to reset the .ini file to default settings.
; alternatively, the ini file should have a backup, which can be reverted to, and not directly changed by the user! 

[test]

~Shift = OverlayRegistry.showKeyboardOverlay(MainKeyboardOverlayWebsites) ;MainKeyboardOverlayWebsites.ShowGui() 

[Classes]



[Battery]

; GUID for battery saver mode and such, this can be found using the command: powercfg /L
PowerSaverModeGUID = "7ac15103-7e10-499d-b365-9647e042cde2"
DefaultPowerModeGUID = "8759706d-706b-4c22-b2ec-f91e1ef6ed38"

[WebNavigator]

chatGptLoadTime = 3000

[CommandPrompt]
DefaultPath = "C:\Users\adria\"

; Key Modifiers: [^ = Ctrl] [+ = Shift] [! = Alt] [# = Win]
; The left side (key) of the expressions are the functions.
; The right side (value) of the expressions are the keys/hotkeys to press to run these functions.

[PrimaryLayer-DefaultKeys]

; Nothing here yet

[PrimaryLayer-Functions]

; Shows/hides gui which can be written in to help classmates/colleagues or whatever
win+0 = OnScreenWriter.ToggleShowKeysPressed()

; press key + any modifier to exit script
; used as an emergency exitapp, since the script may have bugs which make it hard to exit.
*f2 = ApplicationManipulatorInstance.CloseActiveAutohotkeyScript()

; close tabs to the right
^!w = WebSearcher.CloseTabsToTheRight()

; Works as Alt+f4
^q = ApplicationManipulatorInstance.CloseActiveApplication()

; Opens a command prompt at the current location
win+c = CommandPrompt.OpenCmdPathedToCurrentLocation()

; Suspends the script
^!s = ApplicationManipulatorInstance.SuspendActiveAutohotkeyScript()

[SecondaryLayer]

ToggleKey = CapsLock

[SecondaryLayer-DefaultKeys]

; Alt gr = LWin
LControl & RAlt = LWin

*q = Esc
*å = Esc

*a = Alt
*d = Shift
*f = Ctrl
*n = Tab

*w = WheelUp
*s = WheelDown

*e = Browser_Back
*r = Browser_Forward

*y = PgUp
*h = PgDn

*u = Home
*o = End

*p = Del
*ø = BackSpace

^s = ^s
^a = ^a

*z = ^z
*x = ^x
*c = ^c
*v = ^v

; LeftClick 
*m = Click
; RightClick 
*g = AppsKey

; F6 is used to navigate between different tab areas.
*, = F6

*i = Up
*j = Left
*k = Down
*l = Right


[SecondaryLayer-Functions]

; Go to study plan (from current week to end of first semester currently)
+1 = WebSearcher.OpenUrl("https://tp.educloud.no/ntnu/timeplan/?id[]=38726&type=student&weekTo=52&ar=2023&") 

; Go to blackboard
+2 = WebSearcher.LoginToSite("https://ntnu.blackboard.com/ultra/course" , ["\imageSearchImages\feideBlackboardMaximized.png , \imageSearchImages\feideBlackboardMinimized.png"], 3000) 

; Go to programming 1, try to login if not logged in
+3 = WebSearcher.LoginToSite("https://ntnu.blackboard.com/ultra/courses/_39969_1/cl/outline" , ["\imageSearchImages\feideBlackboardMaximized.png , \imageSearchImages\feideBlackboardMinimized.png"], 3000) 

; Go to team class, try to login if not logged in
+4 = WebSearcher.LoginToSite("https://ntnu.blackboard.com/ultra/courses/_39995_1/cl/outline" , ["\imageSearchImages\feideBlackboardMaximized.png , \imageSearchImages\feideBlackboardMinimized.png"], 3000) 

; Go to Math, try to login if not logged in
+5 = WebSearcher.LoginToSite("https://ntnu.blackboard.com/ultra/courses/_44996_1/cl/outline" , ["\imageSearchImages\feideBlackboardMaximized.png , \imageSearchImages\feideBlackboardMinimized.png"], 3000) 

; Go to programming, numeric and safety, try to login if not logged in
+6 = WebSearcher.LoginToSite("https://ntnu.blackboard.com/ultra/courses/_43055_1/cl/outline" , ["\imageSearchImages\feideBlackboardMaximized.png , \imageSearchImages\feideBlackboardMinimized.png"], 3000) 

; Go to jupyterhub, try to login if not logged in
+7 = WebSearcher.LoginToSite("https://inga1002.apps.stack.it.ntnu.no/user/adriangb/lab" , jupyter["\imageSearchImages\jupyterHubMaximized.png", "\imageSearchImages\jupyterHubMinimized.png"]HubLoginImages, 4000) 

; Go to capquiz
+8 = WebSearcher.OpenUrl("https://capquiz.math.ntnu.no/my/")

; opens the file explorer in the given location
^1 = FileExplorer.NavigateToFolder("C:\")
^2 = FileExplorer.NavigateToFolder("C:\Users\adria")
^3 = FileExplorer.NavigateToFolder("C:\Users\adria\github")
^4 = FileExplorer.NavigateToFolder("C:\Users\adria\Downloads")
^5 = FileExplorer.NavigateToFolder("C:\Users\adria\github\University")
^6 = FileExplorer.NavigateToFolder("C:\Users\adria\github\University\Programmering 1\Mappe Vurdering\mappe-idata1003-traindispatchsystem-Osterie")

; opens a new tab in chrome which searches for the highlited content, if no content is highlighted, clipboard content is sent.
t = WebSearcher.LookUpHighlitedTextOrClipboardContent()

; Shift + t Searches in the same manner as above, but in a chat with chat-gpt
+t = WebSearcher.AskChatGptAboutHighligtedTextOrClipboardContent()

; Ctrl + t translates highlighted text or clipboard content from a detected language to english 
^t = WebSearcher.ShowTranslatedText("auto", "en")

; Ctrl + Shift + t translates highlighted text or clipboard content from a detected language to norwegian
^+t = WebSearcher.ShowTranslatedText("auto", "no")

; Creates an input box, which when confirm or enter is pressed, searches the web for its contents
b = WebSearcher.SearchFromInputBox()

< = MouseInstance.MoveMouseToCenterOfScreen()

; Hotkeys for the first keyboard overlay
; could make even more general, like this
; [Which keyboard layer + what the hotkeys are used for]
; this is one line below is basically just an example of what the line above could look like
; [MainKeyboardOverlayHotkeysHelper]

; [PrimaryLayerKeyboardOverlay0000]

; ShowOverlayKey = + 
; ; Can be set to toggle or hold
; ShowOverlayMode = hold

; ColumnWidth = 50
; ColumnHeight = 50

; Column1 = 1, "test1"
; Column2 = 2, "test2"
; Column3 = 3, "test3"


; perhaps it should be called main layer? becaues the second layer togglekey switches between these two layers. (two or more actually)
; [SecondaryLayer]
; ; Should probably be possibly to have any key as a togglekey, but for now it is only possible to use CapsLock as a togglekey.
; ; ToggleKey = CapsLock

; ; Shows first keyboard overlay for websites when a shift is held down
; ~Shift = OverlayRegistry.showKeyboardOverlay(SecondaryLayerKeyboardOverlay1) 

; ; Hides first keyboard overlay for websites (and second overlay for devices just in case)
; Shift Up = OverlayRegistry.hideAllLayers()

; ; Shows first keyboard overlay for file explorer when a shift is held down
; ~Ctrl =  OverlayRegistry.showKeyboardOverlay(SecondaryLayerKeyboardOverlay2) 

; ; Hides first keyboard overlay for file explorer 
; Ctrl Up = OverlayRegistry.hideAllLayers()

[SecondaryLayer-KeyboardOverlay1]

ShowKeyboardOverlayKey = ~Shift

; LayerModifier should be limited to modifier keys, so Shift, Alt, Win, Ctrl (+, !, #, ^)
; Can be set to toggle or hold
; ShowOverlayMode = hold
; Option 2.
; First is the key which shows the key to press to run the last argument. Second argument is the helper text is a friendly description of what the hotkey does (although somewhat vague).

Column1 = 1, "Open Time Table"
Column2 = 2, "Black Board"
Column3 = 3, "Prog 1"
Column4 = 4, "Team"
Column5 = 5, "Math"
Column6 = 6, "Prog Num Sec"
Column7 = 7, "Jupyter Hub"
Column8 = 8, "Capquiz"

[SecondaryLayer-KeyboardOverlay2]

ShowKeyboardOverlayKey = ~Control
; Can be set to toggle or hold
; ShowOverlayMode = toggle/hold

Column1 = 1, "Root"
Column2 = 2, "Adrian"
Column3 = 3, "Github"
Column4 = 4, "Down loads"
Column5 = 5, "School"
Column6 = 6, "Mappe"

[TertiaryLayer]

ToggleKey = +CapsLock

[TertiaryLayer-DefaultKeys]


[TertiaryLayer-Functions]

; Hides screen
a = privacyController.HideScreen()

; Hides windows
s = privacyController.HideWindow()

; Hides tabs
d = privacyController.HideTabs()

; Hides the gui which is used to hide tabs, windows and the screen
f = privacyController.HideGui()

; Blocks input from keyboard and mouse, can be deactivated with Home + End
Home = ComputerInput.BlockAllInput()

; Re-Enables input
Home & End = ComputerInput.UnBlockAllInput()

; Switches power saver on, or off(wont turn off if Battery is 50% or lower)
p = Battery.TogglePowerSaverMode()

; Switches brightness to 100 or 50
u = Monitor.ToggleHighestBrightness() 

; ; Switches brightness to 0 or 50
j = Monitor.ToggleLowestBrightness() 

; Switches gamma values (r, g, b) to 256,256,256 or 128,128,128
o = Monitor.ToggleHighestGamma() 

; Switches gamma values (r, g, b) to 0,0,0 or 128,128,128
i = Monitor.ToggleLowestGamma()     

; Increases red by 63 until it reaches 255, then it starts over
k = Monitor.CycleRed(63, 255) 

; Increases green by 63 until it reaches 255, then it starts over
l = Monitor.CycleGreen(63, 255)

; Increases blue by 63 until it reaches 255, then it starts over
ø = Monitor.CycleBlue(63, 255)

; Closes script
Esc = ApplicationManipulatorInstance.CloseActiveAutohotkeyScript()

; [TertiaryKeyboard-KeyboardOverlay1]

; ShowOverlayModifier = +
; ; Can be set to toggle or hold
; ShowOverlayMode = toggle/hold

